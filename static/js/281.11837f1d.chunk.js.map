{"version":3,"file":"static/js/281.11837f1d.chunk.js","mappings":"0RAGaA,GAAgBC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,sBAEbE,GAAUF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,uoBAiCPI,GAAYJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,idAsBTM,GAAWN,EAAAA,EAAAA,IAAOI,EAAPJ,CAAH,sBAERO,EAASP,EAAAA,GAAAA,OAAH,8gBAuBNQ,EAAUR,EAAAA,GAAAA,EAAH,4D,SCzEdS,EAAgB,CACpBC,KAAM,GACNC,OAAQ,IAGJC,GAAaC,EAAAA,EAAAA,IAAO,CACxBH,MAAMI,EAAAA,EAAAA,MACHC,QACC,yHACA,0IAEDC,WACHL,QAAQG,EAAAA,EAAAA,MACLC,QACC,6EACA,gGAEDC,aAGQC,EAAc,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAM5B,OACE,SAACnB,EAAD,CACEU,cAAeA,EACfS,SARJ,cAAwD,IAAhCR,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,OAAYQ,EAAa,EAAbA,UACxCD,EAASR,EAAMC,GACfQ,GACD,EAMGC,iBAAkBR,EAHpB,UAKE,UAACV,EAAD,CAASmB,aAAa,MAAtB,WACE,8BACE,oCACA,SAACjB,EAAD,CAAWkB,YAAY,qBAAqBC,KAAK,OAAOb,KAAK,UAC7D,SAAC,KAAD,CAAcc,UAAWhB,EAASE,KAAK,aAEzC,8BACE,qCACA,SAACJ,EAAD,CACEgB,YAAY,sBACZC,KAAK,MACLb,KAAK,YAEP,SAAC,KAAD,CAAcc,UAAWhB,EAASE,KAAK,eAEzC,SAACH,EAAD,CAAQgB,KAAK,SAAb,6BAIP,EC7DGE,EAAY,YAgFT,IAAIC,EAAuB,SAA8BC,EAAGC,GACjE,OAAOD,IAAMC,CACd,EAqBM,SAASC,EAAeC,EAAMC,GACnC,IAAIC,EAAoD,kBAA3BD,EAAsCA,EAAyB,CAC1FE,cAAeF,GAEbG,EAAwBF,EAAgBC,cACxCA,OAA0C,IAA1BC,EAAmCR,EAAuBQ,EAC1EC,EAAwBH,EAAgBI,QACxCA,OAAoC,IAA1BD,EAAmC,EAAIA,EACjDE,EAAsBL,EAAgBK,oBACtCC,EA7BC,SAAkCL,GACvC,OAAO,SAAoCM,EAAMC,GAC/C,GAAa,OAATD,GAA0B,OAATC,GAAiBD,EAAKE,SAAWD,EAAKC,OACzD,OAAO,EAMT,IAFA,IAAIA,EAASF,EAAKE,OAETC,EAAI,EAAGA,EAAID,EAAQC,IAC1B,IAAKT,EAAcM,EAAKG,GAAIF,EAAKE,IAC/B,OAAO,EAIX,OAAO,CACR,CACF,CAYkBC,CAAyBV,GACtCW,EAAoB,IAAZR,EA/Gd,SAA8BS,GAC5B,IAAIC,EACJ,MAAO,CACLC,IAAK,SAAaC,GAChB,OAAIF,GAASD,EAAOC,EAAME,IAAKA,GACtBF,EAAMG,MAGRxB,CACR,EACDyB,IAAK,SAAaF,EAAKC,GACrBH,EAAQ,CACNE,IAAKA,EACLC,MAAOA,EAEV,EACDE,WAAY,WACV,OAAOL,EAAQ,CAACA,GAAS,EAC1B,EACDM,MAAO,WACLN,OAAQO,CACT,EAEJ,CAwF6BC,CAAqBhB,GAtFnD,SAAwBF,EAASS,GAC/B,IAAIU,EAAU,GAEd,SAASR,EAAIC,GACX,IAAIQ,EAAaD,EAAQE,WAAU,SAAUX,GAC3C,OAAOD,EAAOG,EAAKF,EAAME,IAC1B,IAED,GAAIQ,GAAc,EAAG,CACnB,IAAIV,EAAQS,EAAQC,GAOpB,OALIA,EAAa,IACfD,EAAQG,OAAOF,EAAY,GAC3BD,EAAQI,QAAQb,IAGXA,EAAMG,KACd,CAGD,OAAOxB,CACR,CAwBD,MAAO,CACLsB,IAAKA,EACLG,IAxBF,SAAaF,EAAKC,GACZF,EAAIC,KAASvB,IAEf8B,EAAQI,QAAQ,CACdX,IAAKA,EACLC,MAAOA,IAGLM,EAAQd,OAASL,GACnBmB,EAAQK,MAGb,EAaCT,WAXF,WACE,OAAOI,CACR,EAUCH,MARF,WACEG,EAAU,EACX,EAQF,CAmCgEM,CAAezB,EAASE,GAEvF,SAASwB,IACP,IAAIb,EAAQL,EAAMG,IAAIgB,WAEtB,GAAId,IAAUxB,EAAW,CAIvB,GAFAwB,EAAQnB,EAAKkC,MAAM,KAAMD,WAErB1B,EAAqB,CACvB,IAAIkB,EAAUX,EAAMO,aAChBc,EAAgBV,EAAQW,MAAK,SAAUpB,GACzC,OAAOT,EAAoBS,EAAMG,MAAOA,EACzC,IAEGgB,IACFhB,EAAQgB,EAAchB,MAEzB,CAEDL,EAAMM,IAAIa,UAAWd,EACtB,CAED,OAAOA,CACR,CAMD,OAJAa,EAASK,WAAa,WACpB,OAAOvB,EAAMQ,OACd,EAEMU,CACR,CC/ID,SAASM,EAAgBC,GACvB,IAAIC,EAAeC,MAAMC,QAAQH,EAAM,IAAMA,EAAM,GAAKA,EAExD,IAAKC,EAAaG,OAAM,SAAUC,GAChC,MAAsB,oBAARA,CACf,IAAG,CACF,IAAIC,EAAkBL,EAAaM,KAAI,SAAUF,GAC/C,MAAsB,oBAARA,EAAqB,aAAeA,EAAIhE,MAAQ,WAAa,YAAcgE,CAC1F,IAAEG,KAAK,MACR,MAAM,IAAIC,MAAM,kGAAoGH,EAAkB,IACvI,CAED,OAAOL,CACR,CAEM,SAASS,EAAsBC,GACpC,IAAK,IAAIC,EAAOlB,UAAUtB,OAAQyC,EAAyB,IAAIX,MAAMU,EAAO,EAAIA,EAAO,EAAI,GAAIE,EAAO,EAAGA,EAAOF,EAAME,IACpHD,EAAuBC,EAAO,GAAKpB,UAAUoB,GAG/C,IAAIC,EAAiB,WACnB,IAAK,IAAIC,EAAQtB,UAAUtB,OAAQ4B,EAAQ,IAAIE,MAAMc,GAAQC,EAAQ,EAAGA,EAAQD,EAAOC,IACrFjB,EAAMiB,GAASvB,UAAUuB,GAG3B,IAEIC,EAFAC,EAAkB,EAOlBC,EAAwB,CAC1BC,oBAAgBrC,GAGdsC,EAAatB,EAAMT,MAQvB,GAN0B,kBAAf+B,IACTF,EAAwBE,EAExBA,EAAatB,EAAMT,OAGK,oBAAf+B,EACT,MAAM,IAAIb,MAAM,qFAAuFa,EAAa,KAKtH,IAAIC,EAAwBH,EACxBI,EAAyBD,EAAsBF,eAC/CA,OAA4C,IAA3BG,EAAoCX,EAAyBW,EAM9EC,EAAsBvB,MAAMC,QAAQkB,GAAkBA,EAAiB,CAACA,GACxEpB,EAAeF,EAAgBC,GAC/B0B,EAAqBf,EAAQhB,WAAM,EAAQ,CAAC,WAG9C,OAFAwB,IAEOG,EAAW3B,MAAM,KAAMD,UAC/B,GAAEiC,OAAOF,IAENG,EAAWjB,GAAQ,WAIrB,IAHA,IAAIkB,EAAS,GACTzD,EAAS6B,EAAa7B,OAEjBC,EAAI,EAAGA,EAAID,EAAQC,IAG1BwD,EAAOC,KAAK7B,EAAa5B,GAAGsB,MAAM,KAAMD,YAK1C,OADAwB,EAAcQ,EAAmB/B,MAAM,KAAMkC,EAE9C,IAeD,OAdAE,OAAOC,OAAOJ,EAAU,CACtBN,WAAYA,EACZI,mBAAoBA,EACpBzB,aAAcA,EACdgC,WAAY,WACV,OAAOf,CACR,EACDgB,eAAgB,WACd,OAAOf,CACR,EACDgB,oBAAqB,WACnB,OAAOhB,EAAkB,CAC1B,IAEIS,CACR,EAGD,OAAOb,CACR,CACM,I,sBAAIA,EAAgCL,EAAsBlD,GCvGpD4E,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EACtBC,EAAkB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,SAAnB,EACvBC,EAAc,SAAAL,GAAK,OAAIA,EAAMC,SAASK,KAAnB,ECCnBC,EAAe,SAAAP,GAAK,OAAIA,EAAMQ,MAAV,ECDpBC,GDGqB/B,EAChC,CAACqB,EAAgBQ,IACjB,SAACN,EAAUO,GACT,OAAOP,EAASO,QAAO,qBAAGxG,KACnB0G,cAAcC,SAASH,EAAOE,cADd,GAGxB,ICTiBpH,EAAAA,GAAAA,GAAH,8GCAJsH,GDOOtH,EAAAA,GAAAA,GAAH,mkBCPOA,EAAAA,GAAAA,GAAH,kRAaRuH,EAAOvH,EAAAA,GAAAA,EAAH,4CAIJO,EAASP,EAAAA,GAAAA,OAAH,6PCbNwH,EAAiB,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,YAAaC,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,UACrDC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,UAACP,EAAD,YACE,UAACC,EAAD,WACGE,EADH,KACkBC,MAElB,SAAC,EAAD,CAAQnG,KAAK,SAASuG,QAAS,kBANdC,EAMiCJ,EAN1BC,GAASI,EAAAA,EAAAA,IAAcD,IAA9B,IAAAA,CAMc,EAA/B,sBAKL,ECbYE,EAAc,WACzB,IASiBC,EATXvB,GAAWwB,EAAAA,EAAAA,IAAY1B,GACvBS,GAASiB,EAAAA,EAAAA,IAAYlB,GAoB3B,OAAO,SAACE,EAAD,WAZUe,EALRvB,EAASO,QAAO,YACrB,OADmC,EAAXxG,KACZ0G,cAAcC,SAASH,EAAOE,cAC3C,IAIMc,EAAMtD,KAAI,YAA2B,IAAxBwD,EAAuB,EAAvBA,GAAI1H,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OAC5B,OACE,SAAC6G,EAAD,CAEEC,YAAa/G,EACbgH,cAAe/G,EACfgH,UAAWS,GAHNA,EAMV,MAGJ,E,WC3BYC,GAAQrI,EAAAA,GAAAA,MAAH,iJASLsI,GAAQtI,EAAAA,GAAAA,MAAH,qfCPLuI,GAAe,WAC1B,IAAMX,GAAWC,EAAAA,EAAAA,MAKjB,OACE,UAACQ,GAAD,oCACqB,SAACC,GAAD,CAAO/G,KAAK,OAAOb,KAAK,SAAS8H,SALnC,SAAC,GAA2B,IAAfvF,EAAc,EAAxBwF,OAAUxF,MAChC2E,GAASc,EAAAA,GAAAA,GAAezF,GACzB,MAMF,ECbY0F,GAAU3I,EAAAA,GAAAA,IAAH,kUAoBP4I,GAAQ5I,EAAAA,GAAAA,GAAH,4CAILuH,GAAOvH,EAAAA,GAAAA,GAAH,4CAIJQ,GAAUR,EAAAA,GAAAA,EAAH,qHCjBP6I,GAAc,WACzB,IAAMjB,GAAWC,EAAAA,EAAAA,MACXiB,GAAcX,EAAAA,EAAAA,IAAY1B,GAC1BK,GAAYqB,EAAAA,EAAAA,IAAYtB,GACxBG,GAAQmB,EAAAA,EAAAA,IAAYpB,IAE1BgC,EAAAA,EAAAA,YAAU,WACRnB,GAASoB,EAAAA,EAAAA,MACV,GAAE,CAACpB,IAoBJ,OACE,UAACe,GAAD,CAASM,SAAUH,EAAYrG,OAAS,EAAxC,WACE,SAACmG,GAAD,yBACA,SAAC3H,EAAD,CAAaC,SAXA,SAACR,EAAMC,GACtB,GALmBuI,EAKFvI,EAJVmI,EAAYK,MAAK,SAAAC,GAAO,OAAIA,EAAQzI,SAAWuI,CAAvB,IAK7B,OAZkCG,EAYL3I,EAXxB4I,MAAM,GAAD,OAWW3I,EAXX,kDACgD0I,EADhD,MADQ,IAAgBA,EAMjBH,EASnBtB,GAAS2B,EAAAA,EAAAA,IAAW,CAAE7I,KAAAA,EAAMC,OAAAA,IAC7B,KAMG,SAAC,GAAD,6BACEqG,GAASF,EACTE,GAAUF,GAAoC,IAAvBgC,EAAYrG,QAGnC,iCACE,SAAC8F,GAAD,KACA,SAACN,EAAD,QAJF,SAAC,GAAD,mDASP,E,WCtCD,GAfiB,WACf,IAAQnB,GAAc0C,EAAAA,GAAAA,KAAd1C,UAER,OACE,iCACE,SAAC2C,EAAA,EAAD,WACE,0CAGD3C,GACD,SAAC+B,GAAD,MAGL,C","sources":["components/FormContact/FormContact.styled.jsx","components/FormContact/FormContact.jsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.js","redux/filter/selectors.js","components/ListContact/ListContact.styled.jsx","components/ElementContact/ElementContact.styled.jsx","components/ElementContact/ElementContact.jsx","components/ListContact/ListContact.jsx","components/SearchFilter/SearchFilter.styled.jsx","components/SearchFilter/SearchFilter.jsx","components/ContactsBar/ContactsBar.styled.jsx","components/ContactsBar/ContactsBar.jsx","pages/Contacts.js"],"sourcesContent":["import { Form, Field, Formik } from 'formik';\nimport styled from 'styled-components';\n\nexport const FormikWrapper = styled(Formik)``;\n\nexport const FormBox = styled(Form)`\n  display: flex;\n  gap: 20px;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 0;\n  margin-bottom: 25px;\n  padding: 20px;\n  width: 400px;\n  max-width: 400px;\n  height: 390px;\n  max-height: 390px;\n  background: white;\n  border-radius: 1px;\n  box-shadow: rgb(38, 57, 77) 0px 20px 30px -10px;\n\n  & label {\n    display: flex;\n    flex-direction: column;\n    color: #354649;\n    margin-bottom: 10px;\n    width: 100%;\n    & span {\n      margin-bottom: 10px;\n      font-size: 20px;\n      text-align: left;\n    }\n  }\n`;\n\nexport const InputName = styled(Field)`\n  padding: 0 20px;\n  margin-bottom: 10px;\n  background: #e0e7e9;\n  line-height: 40px;\n  border-width: 0;\n  border-radius: 2px;\n  font-family: 'Roboto', sans-serif;\n  font-size: 18px;\n  &::placeholder {\n    font-size: 15px;\n  }\n  &:focus {\n    outline: none;\n  }\n  :hover {\n    background-color: #a3c6c4;\n    box-shadow: rgb(204, 219, 232) 3px 3px 6px 0px inset,\n      rgba(255, 255, 255, 0.5) -3px -3px 6px 1px inset;\n  }\n`;\n\nexport const InputTel = styled(InputName)``;\n\nexport const Button = styled.button`\n  height: 40px;\n  background-color: #a3c6c4;\n  border-radius: 2px;\n  color: #354649;\n  cursor: pointer;\n  display: inline-block;\n  font-family: CerebriSans-Regular, -apple-system, system-ui, Roboto, sans-serif;\n  padding: 7px 20px;\n  text-align: center;\n  text-decoration: none;\n  transition: all 250ms;\n  border: 0;\n  font-size: 16px;\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  :hover {\n    background-color: #6c7a89;\n    color: #e0e7e9;\n  }\n`; \n\nexport const Message = styled.p`\n  color: red;\n  text-align: left;\n`;\n","import { ErrorMessage } from 'formik';\nimport { object, string } from 'yup';\nimport PropTypes from 'prop-types';\nimport {\n  FormBox,\n  InputName,\n  InputTel,\n  Button,\n  FormikWrapper,\n  Message,\n} from './FormContact.styled';\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nconst userSchema = object({\n  name: string()\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    )\n    .required(),\n  number: string()\n    .matches(\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .required(),\n});\n\nexport const FormContact = ({ onSubmit }) => {\n  function handleSubmit({ name, number }, { resetForm }) {\n    onSubmit(name, number);\n    resetForm();\n  }\n\n  return (\n    <FormikWrapper\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      validationSchema={userSchema}\n    >\n      <FormBox autoComplete=\"off\">\n        <label>\n          <span>NAME</span>\n          <InputName placeholder=\"Enter contact name\" type=\"text\" name=\"name\" />\n          <ErrorMessage component={Message} name=\"name\" />\n        </label>\n        <label>\n          <span>PHONE</span>\n          <InputTel\n            placeholder=\"Enter contact phone\"\n            type=\"tel\"\n            name=\"number\"\n          />\n          <ErrorMessage component={Message} name=\"number\" />\n        </label>\n        <Button type=\"submit\">ADD CONTACT</Button>\n      </FormBox>\n    </FormikWrapper>\n  );\n};\n\nFormContact.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nexport const selectFilter = state => state.filter;\n\nexport const filterListContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: left;\n  gap: 10px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: baseline;\n  gap: 10px;\n  justify-content: space-between;\n  margin-bottom: 0.25rem;\n  padding: 10px;\n  border-radius: 50px;\n\n  color: #fff;\n  background: rgb(223, 225, 235);\n  box-shadow: rgba(0, 0, 0, 0.17) 0px -23px 25px 0px inset,\n    rgba(0, 0, 0, 0.15) 0px -36px 30px 0px inset,\n    rgba(0, 0, 0, 0.1) 0px -79px 40px 0px inset, rgba(0, 0, 0, 0.06) 0px 2px 1px,\n    rgba(0, 0, 0, 0.09) 0px 4px 2px, rgba(0, 0, 0, 0.09) 0px 8px 4px,\n    rgba(0, 0, 0, 0.09) 0px 16px 8px, rgba(0, 0, 0, 0.09) 0px 32px 16px;\n`;\n","import styled from 'styled-components';\n\nexport const ListElem = styled.li`\n  display: flex;\n  flex-basis: calc((100% - 20px - 60px) / 3);\n  align-items: center;\n  gap: 10px;\n  justify-content: space-between;\n  margin-bottom: 0.25rem;\n  padding: 10px;\n  border-radius: 2px;\n  color: #354649;\n  background: #a3c6c4;\n`;\n\nexport const Text = styled.p`\n  font-size: 18px;\n`;\n\nexport const Button = styled.button`\n  padding: 5px 15px;\n  border: 1px solid black;\n  border-radius: 2px;\n  border-color: white;\n  background-color: transparent;\n  color: white;\n\n  :hover,\n  :focus {\n    background-color: #6c7a89;\n    color: white;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/operations';\n\nimport { ListElem, Text, Button } from './ElementContact.styled';\n\nexport const ElementContact = ({ contactName, contactNumber, contactId }) => {\n  const dispatch = useDispatch();\n  const handleDelete = eId => dispatch(deleteContact(eId));\n  return (\n    <ListElem>\n      <Text>\n        {contactName}: {contactNumber}\n      </Text>\n      <Button type=\"button\" onClick={() => handleDelete(contactId)}>\n        DELETE\n      </Button>\n    </ListElem>\n  );\n};\n\nElementContact.propTypes = {\n  contactName: PropTypes.string.isRequired,\n  contactNumber: PropTypes.string.isRequired,\n  contactId: PropTypes.string.isRequired,\n};\n","import { useSelector } from 'react-redux';\nimport { selectFilter } from '../../redux/filter/selectors';\nimport { selectContacts } from '../../redux/contacts/selectors';\nimport { List } from './ListContact.styled';\nimport { ElementContact } from '../ElementContact/ElementContact';\n\nexport const ListContact = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  const makeFiltredContacts = () => {\n    return contacts.filter(({ name }) => {\n      return name.toLowerCase().includes(filter.toLowerCase());\n    });\n  };\n\n  const makeList = array => {\n    return array.map(({ id, name, number }) => {\n      return (\n        <ElementContact\n          key={id}\n          contactName={name}\n          contactNumber={number}\n          contactId={id}\n        />\n      );\n    });\n  };\n  return <List>{makeList(makeFiltredContacts())}</List>;\n};\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: block;\n  color: rgb(9 9 121);\n  font-size: 15px;\n  font-weight: 500;\n  margin-top: 0;\n  color: #354649;\n`;\n\nexport const Input = styled.input`\n  margin: 10px 0 10px 25px;\n  padding: 0 20px;\n  background: #fff;\n  line-height: 40px;\n  border-width: 0;\n  border-radius: 2px;\n  font-family: 'Roboto', sans-serif;\n  font-style: italic;\n  font-size: 18px;\n  box-shadow: rgba(0, 0, 0, 0.06) 0px 2px 4px 0px inset;\n  &:focus {\n    outline: none;\n  }\n  :hover {\n    background-color: #a3c6c4;\n    box-shadow: rgb(204, 219, 232) 3px 3px 6px 0px inset,\n      rgba(255, 255, 255, 0.5) -3px -3px 6px 1px inset;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { filterContacts } from '../../redux/filter/slice';\nimport { Label, Input } from './SearchFilter.styled';\n\nexport const SearchFilter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilter = ({ target: { value } }) => {\n    dispatch(filterContacts(value));\n  };\n  return (\n    <Label>\n    FIND CONTACT BY NAME <Input type=\"text\" name=\"filter\" onChange={handleFilter} />\n    </Label>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  max-width: 1200px;\n  margin-left: auto;\n  margin-right: auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 20px;\n  padding: 20px;\n  text-align: center;\n  height: 100vh;\n\n  & h1,\n  h2 {\n    margin: 0;\n    color: #354649;\n  }\n`;\n\nexport const Title = styled.h1`\n  font-size: 45px;\n`;\n\nexport const Text = styled.h2`\n  font-size: 30px;\n`;\n\nexport const Message = styled.p`\n  margin-left: auto;\n  margin-right: auto;\n  padding: 10px;\n  background-color: #e0e7e9;\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact, fetchContacts } from 'redux/contacts/operations';\nimport { FormContact } from 'components/FormContact/FormContact';\nimport { ListContact } from 'components/ListContact/ListContact';\nimport { SearchFilter } from 'components/SearchFilter/SearchFilter';\nimport { Message, Title, Wrapper, Text } from './ContactsBar.styled';\nimport {\n  selectContacts,\n  selectIsLoading,\n  selectError,\n} from '../../redux/contacts/selectors';\n\nexport const ContactsBar = () => {\n  const dispatch = useDispatch();\n  const allContacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const notifiesAlert = (numberContact, nameContact) => {\n    return alert(\n      `${numberContact} is already in contacts under the name ${nameContact}.`\n    );\n  };\n\n  const checkСontact = newNumber => {\n    return allContacts.some(contact => contact.number === newNumber);\n  };\n\n  const onSubmit = (name, number) => {\n    if (checkСontact(number)) {\n      return notifiesAlert(number, name);\n    }\n\n    dispatch(addContact({ name, number }));\n  };\n\n  return (\n    <Wrapper isHeight={allContacts.length > 0}>\n      <Title>PHONEBOOK</Title>\n      <FormContact onSubmit={onSubmit} />\n      <Text>YOUR CONTACTS</Text>\n      {!error && isLoading}\n      {!error && !isLoading && allContacts.length === 0 ? (\n        <Message>YOUR CONTACT LIST IS EMPTY  :( ...</Message>\n      ) : (\n        <>\n          <SearchFilter />\n          <ListContact />\n        </>\n      )}\n    </Wrapper>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { ContactsBar } from 'components/ContactsBar/ContactsBar';\nimport { useAuth } from 'hooks';\n\nconst Contacts = () => {\n  const { isLoading } = useAuth();\n\n  return (\n    <>\n      <Helmet>\n        <title>Contacts</title>\n      </Helmet>\n\n      {isLoading}\n      <ContactsBar />\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["FormikWrapper","styled","Formik","FormBox","Form","InputName","Field","InputTel","Button","Message","initialValues","name","number","userSchema","object","string","matches","required","FormContact","onSubmit","resetForm","validationSchema","autoComplete","placeholder","type","component","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","List","toLowerCase","includes","ListElem","Text","ElementContact","contactName","contactNumber","contactId","dispatch","useDispatch","onClick","eId","deleteContact","ListContact","array","useSelector","id","Label","Input","SearchFilter","onChange","target","filterContacts","Wrapper","Title","ContactsBar","allContacts","useEffect","fetchContacts","isHeight","newNumber","some","contact","nameContact","alert","addContact","useAuth","Helmet"],"sourceRoot":""}