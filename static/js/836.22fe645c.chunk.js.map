{"version":3,"file":"static/js/836.22fe645c.chunk.js","mappings":"kRAGaA,EAAQC,EAAAA,GAAAA,GAAH,uIAQLC,EAAYD,EAAAA,GAAAA,IAAH,mMAWTE,GAAUF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,uoBAiCPI,EAAQJ,EAAAA,GAAAA,MAAH,wGAOLK,EAAOL,EAAAA,GAAAA,KAAH,uHAOJM,GAAQN,EAAAA,EAAAA,IAAOO,EAAAA,GAAPP,CAAH,idAsBLQ,EAAmBR,EAAAA,GAAAA,EAAH,qGAOhBS,EAAcT,EAAAA,GAAAA,OAAH,8gB,SCnFlBU,EAAgB,CACpBC,KAAM,GACNC,MAAO,GACPC,SAAU,IAGNC,GAAaC,EAAAA,EAAAA,IAAO,CACxBJ,MAAMK,EAAAA,EAAAA,MACHC,SAAS,oBACTC,IAAI,EAAG,cACPC,IAAI,GAAI,aACXP,OAAOI,EAAAA,EAAAA,MAASJ,MAAM,iBAAiBK,SAAS,qBAChDJ,UAAUG,EAAAA,EAAAA,MAASC,SACjB,iHAISG,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAOjB,OACE,SAACrB,EAAD,WACE,SAAC,KAAD,CACES,cAAeA,EACfa,SATe,SAAC,EAAD,GAA+C,IAA5CZ,EAA2C,EAA3CA,KAAMC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,SAAcW,EAAgB,EAAhBA,UACjDH,GAASI,EAAAA,EAAAA,IAAS,CAAEd,KAAAA,EAAMC,MAAAA,EAAOC,SAAAA,KACjCW,GACD,EAOKE,iBAAkBZ,EAHpB,UAKE,UAACZ,EAAD,CAASyB,aAAa,MAAtB,WACE,SAAC5B,EAAD,uBACA,UAACK,EAAD,YACE,SAACC,EAAD,oBACA,SAACC,EAAD,CAAOsB,YAAY,sBAAsBC,KAAK,OAAOlB,KAAK,UAC1D,SAAC,KAAD,CAAcmB,UAAWtB,EAAkBG,KAAK,aAElD,UAACP,EAAD,YACE,SAACC,EAAD,qBACA,SAACC,EAAD,CACEsB,YAAY,6BACZC,KAAK,OACLlB,KAAK,WAEP,SAAC,KAAD,CAAcmB,UAAWtB,EAAkBG,KAAK,cAElD,UAACP,EAAD,YACE,SAACC,EAAD,wBACA,SAACC,EAAD,CACEsB,YAAY,wBACZC,KAAK,WACLlB,KAAK,cAEP,SAAC,KAAD,CAAcmB,UAAWtB,EAAkBG,KAAK,iBAElD,SAACF,EAAD,CAAaoB,KAAK,SAAlB,0BAKT,EC9DD,EAZiB,WACf,OACE,iCACE,SAACE,EAAA,EAAD,WACE,+CAGF,SAACX,EAAD,MAGL,C","sources":["components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/Register.js"],"sourcesContent":["import { Field, Form } from 'formik';\nimport styled from 'styled-components'; \n\nexport const Title = styled.h2`\n  display: inline-block;\n  letter-spacing: 2px;\n  font-weight: bold;\n  font-size: 50px;\n  color: #6c7a89;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100vh;\n  max-width: 500px;\n  margin: 0 auto;\n`;\n\nexport const FormBox = styled(Form)`\n  display: flex;\n  gap: 30px;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 0;\n  margin-bottom: 25px;\n  padding: 30px;\n  width: 440px;\n  max-width: 440px;\n  height: 720px;\n  max-height: 720px;\n  background: white;\n  border-radius: 1px;\n  box-shadow: rgb(38, 57, 77) 0px 20px 30px -10px;\n\n  & label {\n    display: flex;\n    flex-direction: column;\n    color: #354649;\n    margin-bottom: 10px;\n    width: 100%;\n    & span {\n      margin-bottom: 10px;\n      font-size: 20px;\n      text-align: left;\n    }\n  }\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin: 10px 0;\n  width: 100%;\n`;\n\nexport const Text = styled.span`\n  text-align: left;\n  justify-content: center;\n  margin-bottom: 10px;\n  font-size: 1.2rem;\n`;\n\nexport const Input = styled(Field)`\n  padding: 0 20px;\n  margin-bottom: 10px;\n  background: #e0e7e9;\n  line-height: 40px;\n  border-width: 0;\n  border-radius: 2px;\n  font-family: 'Roboto', sans-serif;\n  font-size: 18px;\n  &::placeholder {\n    font-size: 15px;\n  }\n  &:focus {\n    outline: none;\n  }\n  :hover {\n    background-color: #a3c6c4;\n    box-shadow: rgb(204, 219, 232) 3px 3px 6px 0px inset,\n      rgba(255, 255, 255, 0.5) -3px -3px 6px 1px inset;\n  }\n`;\n\nexport const ErrorMessageText = styled.p`\n  text-align: left;\n  margin-top: 10px;\n  color: red;\n  font-size: 17px;\n`;\n\nexport const LogInButton = styled.button`\n  height: 40px;\n  background-color: #a3c6c4;\n  border-radius: 2px;\n  color: #354649;\n  cursor: pointer;\n  display: inline-block;\n  font-family: CerebriSans-Regular, -apple-system, system-ui, Roboto, sans-serif;\n  padding: 7px 20px;\n  text-align: center;\n  text-decoration: none;\n  transition: all 250ms;\n  border: 0;\n  font-size: 16px;\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  :hover {\n    background-color: #6c7a89;\n    color: #e0e7e9;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { ErrorMessage, Formik } from 'formik';\nimport { object, string } from 'yup';\nimport { register } from 'redux/auth/operations';\nimport {\n  ErrorMessageText,\n  Container,\n  Label,\n  Text,\n  Input,\n  FormBox,\n  LogInButton,\n  Title,\n} from './RegisterForm.styled';\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nconst userSchema = object({\n  name: string()\n    .required('Name is required')\n    .min(2, 'Too Short!')\n    .max(25, 'Too Long!'),\n  email: string().email('Invalid email').required('Email is required'),\n  password: string().required(\n    'Your password must be at least 8 characters long, 1 number & 1 symbol, 1 uppercase & 1 lowercase character.'\n  ),\n});\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = ({ name, email, password }, { resetForm }) => {\n    dispatch(register({ name, email, password }));\n    resetForm();\n  };\n\n  return (\n    <Container>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        validationSchema={userSchema}\n      >\n        <FormBox autoComplete=\"off\">\n          <Title>SIGN UP</Title>\n          <Label>\n            <Text>NAME</Text>\n            <Input placeholder=\"Please enter a name\" type=\"text\" name=\"name\" />\n            <ErrorMessage component={ErrorMessageText} name=\"name\" />\n          </Label>\n          <Label>\n            <Text>EMAIL</Text>\n            <Input\n              placeholder=\"Please enter email address\"\n              type=\"text\"\n              name=\"email\"\n            />\n            <ErrorMessage component={ErrorMessageText} name=\"email\" />\n          </Label>\n          <Label>\n            <Text>PASSWORD</Text>\n            <Input\n              placeholder=\"Please enter password\"\n              type=\"password\"\n              name=\"password\"\n            />\n            <ErrorMessage component={ErrorMessageText} name=\"password\" />\n          </Label>\n          <LogInButton type=\"submit\">SUBMIT</LogInButton>\n        </FormBox>\n      </Formik>\n    </Container>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nconst Register = () => {\n  return (\n    <>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n\n      <RegisterForm />\n    </>\n  );\n};\n\nexport default Register;\n"],"names":["Title","styled","Container","FormBox","Form","Label","Text","Input","Field","ErrorMessageText","LogInButton","initialValues","name","email","password","userSchema","object","string","required","min","max","RegisterForm","dispatch","useDispatch","onSubmit","resetForm","register","validationSchema","autoComplete","placeholder","type","component","Helmet"],"sourceRoot":""}